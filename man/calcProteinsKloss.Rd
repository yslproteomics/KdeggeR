% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcProteinsKloss.R
\name{calcProteinsKloss}
\alias{calcProteinsKloss}
\title{Calculate Protein-Level k_loss from Peptide-Level Data}
\usage{
calcProteinsKloss(
  o,
  method = "combined",
  ag.metric = "mean",
  ag.weights = "both",
  unique.weights = TRUE,
  in.all = 2,
  removeOutliers = 5,
  ncores = NULL,
  tryRobust = FALSE,
  returnKlossTableOnly = FALSE,
  returnSD = FALSE
)
}
\arguments{
\item{o}{A `pSILAC` object containing peptide-level k_loss data for proteins.}

\item{method}{Character string specifying the method for calculating protein-level rates. Options are:
\describe{
  \item{`"RIA"`}{Uses only RIA-based peptide k_loss values.}
  \item{`"hol"`}{Uses only hol-based peptide k_loss values.}
  \item{`"NLI"`}{Uses only NLI-based peptide k_loss values.}
  \item{`"combined"`}{Combines both RIA-based and NLI-based peptide k_loss values.}
  \item{`"complement"`}{Adds complementary NLI-based k_loss values to the RIA-based results.}
}}

\item{ag.metric}{Character string specifying the aggregation metric for protein-level rates. Options are:
\describe{
  \item{`"mean"` (default)}{Calculates the mean of peptide-level k_loss values; if `ag.weights` is provided, a weighted mean is calculated.}
  \item{`"median"`}{Calculates the median of peptide-level k_loss values.}
  \item{`"remodel"`}{Uses the `modelProteinsKloss` function to re-fit protein models using all peptide-level data. Does not work in the current version of KdeggeR.}
}}

\item{ag.weights}{Character string defining the weighting method for the weighted mean. Ignored if `ag.metric` is not set to `"mean"`. Options are:
\describe{
  \item{`"variance"` (default)}{Uses the inverse variance of the model fit as weights.}
  \item{`"nbpoints"`}{Uses the number of datapoints for each peptide as weights.}
  \item{`"both"`}{Combines inverse variance and number of datapoints as weights.}
}}

\item{unique.weights}{Logical; if `TRUE` (default), unique weights are used for each peptide. If `FALSE`, weights are calculated individually for each sample.}

\item{in.all}{Numeric or logical, specifying the minimum number of samples in which peptides must be quantified to be included. Default is `2`. Set to `FALSE` to include all peptides, regardless of quantification across samples.}

\item{removeOutliers}{Numeric or logical, specifying the threshold for outlier removal. If a numeric value (default is `5`), removes outlier peptides based on this threshold. Set to `FALSE` to disable outlier removal. See `?removeOutlierPeptides` for details.}

\item{ncores}{Numeric, specifying the number of cores to use for parallel processing. Defaults to all available cores minus one.}

\item{tryRobust}{Logical; if `TRUE`, attempts to fit a robust linear model when remodeling based on the H/L ratio. Requires the `MASS` library. Ignored if `method` is not set to `"remodel"`. Default is `FALSE`.}

\item{returnKlossTableOnly}{Logical; if `TRUE`, only the k_loss table is returned, instead of the full `pSILAC` object. Default is `FALSE`.}

\item{returnSD}{Logical; if `TRUE`, includes the standard deviation (SD) of the k_loss values in the output. Default is `FALSE`.}
}
\value{
If `returnKlossTableOnly` is `FALSE` (default), returns the updated `pSILAC` object with the added protein-level k_loss table.
  If `returnKlossTableOnly` is `TRUE`, returns only the protein k_loss table as a data frame.
}
\description{
Aggregates peptide-level k_loss values to calculate protein-level rates for all proteins in a pSILAC dataset.
Requires prior calculation of peptide-level k_loss values using `calcRIAkloss`, `calcHoLkloss`, and/or `calcNLIkloss`.
}
