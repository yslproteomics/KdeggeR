% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calcProteinsKloss.R
\name{aggregateKloss}
\alias{aggregateKloss}
\title{Aggregate Peptide k_loss Values to Protein-Level k_loss}
\usage{
aggregateKloss(
  e,
  samples,
  ag.metric = "mean",
  ag.weights = "variance",
  unique.weights = T,
  in.all = 2,
  removeOutliers = 5,
  returnSD = F
)
}
\arguments{
\item{samples}{A character vector of sample names for which to aggregate peptide k_loss values.}

\item{ag.metric}{The aggregation metric for protein-level rates. Options are `"mean"` (default) or `"median"`. If `"mean"` is selected and `ag.weights` is not `NULL`, a weighted mean is performed.}

\item{ag.weights}{The weighting method for calculating the weighted mean. Options are `"variance"` (default), `"nbpoints"`, or `"both"`. Ignored if `ag.metric` is not `"mean"`. 
- `"variance"`: uses the inverse of the variance of the model's fit.
- `"nbpoints"`: weights by the number of datapoints used for the fit.
- `"both"`: combines both the inverse variance and number of datapoints as weights.}

\item{unique.weights}{Logical; if `TRUE` (default), unique weights are used for each peptide. If `FALSE`, weights are calculated individually for each sample.}

\item{in.all}{Numeric or logical; specifies the minimum number of peptides that must be quantified across all samples for inclusion. Default is `2`. Set to `FALSE` to include all peptides, regardless of sample quantification.}

\item{removeOutliers}{Numeric or logical; specifies the threshold for removing outlier peptides. If a numeric value (default is `5`), removes outliers when the peptide count meets or exceeds this threshold. Set to `FALSE` to disable outlier removal. See `?removeOutlierPeptides` for details.}

\item{returnSD}{Logical; if `TRUE`, returns the standard deviation (SD) of the k_loss values in addition to the mean or median. Default is `FALSE`.}

\item{o}{A data frame containing peptide-level k_loss values, as found in the `RIA.kloss`, `hol.kloss`, or `NLI.kloss` slots of a pSILAC object.}
}
\value{
A numeric vector of length equal to `samples`, containing the aggregated protein-level k_loss for each sample. 
  If `returnSD = TRUE`, the vector length is doubled, with the SD following each k_loss estimate.
}
\description{
This function aggregates peptide-level k_loss values to calculate a protein-level k_loss for each sample.
While this function can be used directly, it is generally recommended to use `calcProteinsKloss` for calculating protein-level rates.
}
\details{
This function aggregates k_loss values from peptides to a protein-level k_loss for each sample. Depending on the specified `ag.metric` and `ag.weights`, the function computes either a mean or median of the peptide values, with an option for weighted means if variance or datapoint count information is provided. Outliers can be removed if the peptide count meets the `removeOutliers` threshold.
}
\examples{
# Assuming 'o' contains peptide-level k_loss data and 'samples' specifies sample names:
aggregateKloss(o, samples = c("Sample1", "Sample2"), ag.metric = "mean", ag.weights = "variance", in.all = 3, returnSD = TRUE)

}
