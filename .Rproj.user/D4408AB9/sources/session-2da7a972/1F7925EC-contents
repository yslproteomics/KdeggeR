#' Calculate H/L-based k_loss
#'
#' Models the rate of loss of the light isotope (k_loss) on the basis of the slope of the log-transformed isotope ratio.
#'
#' @param x The timepoints.
#' @param y The ln(H/L+1) values corresponding to the timepoints.
#' @param tryRobust Whether to try to fit a robust linear model (requires the 'MASS' library). Ignored with less than 10 data points.
#'
#' @return A numeric vector of length 4 containing: 
#'	    the k_loss, i.e. ln(H/L+1)slope, 
#'	    the standard error of the slope, 
#'	    the sum of residuals of the linear model, 
#'	    the number of points on which the model was built.
#'
#' @export
getHoLmod <- function(x,y,tryRobust=F){
  if(length(x) != length(y))	stop("x and y are of different lengths!")
  y <- as.numeric(y)
  x2 <- x[which(!is.na(y))]
  y <- y[which(!is.na(y))]
  if(length(y)==1){
    if(x2==0)	return(c(NA,NA,NA,1))
    return(c(y/x2,NA,NA,1))
  }
  if(tryRobust & length(y) >= 10){
    fm <- try(rlm(y~x2+0), silent=T)
    if(!"lm" %in% class(fm))	fm <- try(lm(y~x2+0), silent=T)
  }else{
    fm <- try(lm(y~x2+0), silent=T)
  }
  if("lm" %in% class(fm)){
    return(c(as.numeric(summary(fm)$coefficients[1:2]),sum(residuals(fm)^2),length(x2)))
  }
  return(c(NA,NA,NA,length(x2)))
}